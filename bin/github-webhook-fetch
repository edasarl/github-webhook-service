#!/bin/sh

remote="origin"
prod="prod"

ref=${gh_ref}		# refs/heads/<branch> or refs/tags/<tag>

# get latest changes
git fetch --all -f -p

branch=""
commit=""

code=1
if [ "${ref}" != "${ref#refs/heads/}" ]; then
	branch=${ref#refs/heads/}
	commit=`git show-ref -s refs/remotes/${remote}/${branch}`
elif [ "${ref}" != "${ref#refs/tags/}" ]; then
	# check if last commit of branch prod is this commit
	if [ `git branch -r --contains ${ref} ${remote}/${prod}` = "${remote}/${prod}" ]; then
		branch=${prod}
		commit=`git show-ref -s ${ref}`
	else
		echo "tag not on ${prod}: ${ref}"
	fi
else
	echo "Unsupported ref ${ref}"
fi
if [ "${branch}" != "" ]; then
	wk=`git worktree list | grep "\[${branch}\]" | cut -f1 -d' '`
	cd ${wk}
	if [ $? -ne 0 ]; then
		echo "Cannot cd into worktree of ${branch}"
	else
		echo "cd into ${wk}"
	fi
fi
if [ "${commit}" != "" ]; then
	head=`git show-ref -s refs/heads/${branch}`
	if [ "${commit}" != "${head}" ]; then
		echo "merge ${commit} onto ${head}"
		git stash -u
		git merge ${ref}
		git stash pop
		exit 0
	else
		echo "${branch} already at ${commit}"
	fi
else
	echo "no commit for ref ${ref} on branch ${branch}"
fi
exit 1
